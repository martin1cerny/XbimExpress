<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# foreach(var u in Using) { #>
using <#= u #>;
<# } #>

namespace <#= Namespace #>
{
    public class <#= Name #><T>: <#= ItemSet #><T>, IOptional<#= ItemSet #><T>
    {
        private bool _initialized;

        internal <#= Name #>(IPersistEntity entity, int capacity, byte property) : base(entity, capacity, property)
        {
        }

        public bool Initialized 
		{ 
            get { return _initialized || Count > 0; }
		}

        public void Initialize()
        {
            _initialized = true;
        }

        public void Uninitialize()
        {
            Clear();
            _initialized = false;
        }
    }
}
