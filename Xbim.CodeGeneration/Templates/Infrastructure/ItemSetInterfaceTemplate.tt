<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Linq;
<# foreach(var u in Using) { #>
using <#= u #>;
<# } #>

namespace <#= Namespace #>
{
    public interface <#= Name #><T> : IList<T>, IList, INotifyCollectionChanged, INotifyPropertyChanged
    {
		<#= PersistEntityInterface #> OwningEntity { get; }
        T First { get; }
        T FirstOrDefault();
        T FirstOrDefault(Func<T, bool> predicate);
        TF FirstOrDefault<TF>(Func<TF, bool> predicate);
        IEnumerable<TW> Where<TW>(Func<TW, bool> predicate);
        IEnumerable<TO> OfType<TO>();
    }
}
