// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Xbim.CodeGeneration.Templates.CrossAccess
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Xbim.ExpressParser.SDAI;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class EntityInterfaceImplementation : EntityInterfaceTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 8 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 foreach(var u in Using) { 
            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 9 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(u));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 10 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n// ReSharper disable once CheckNamespace\r\nnamespace ");
            
            #line 13 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OwnNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\tpublic partial class @");
            
            #line 15 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 15 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Interface));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n");
            
            #line 17 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
	foreach(var attribute in ExplicitAttributesToImplement){ 
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 18 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(attribute)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 18 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("I" + attribute.ParentEntity.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 18 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t{ \r\n\t\t\tget\r\n\t\t\t{\r\n");
            
            #line 22 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		var match = GetMatch(attribute); 
		if (match == null || !match.IsTypeCompatible) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t//TODO: Handle return of ");
            
            #line 24 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" for which no match was found\r\n\t\t\t\tthrow new System.NotImplementedException();\r\n");
            
            #line 26 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		} else if (attribute.Domain is DefinedType) { 
            
            #line default
            #line hidden
            
            #line 27 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			if (match.SourceAttribute.OptionalFlag) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tif (");
            
            #line 28 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(" == null) return null;\r\n");
            
            #line 29 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} 
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn new ");
            
            #line 30 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(attribute).Trim('?')));
            
            #line default
            #line hidden
            this.Write("((");
            
            #line 30 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetBaseSystemType(match.SourceAttribute.Domain as DefinedType)));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 30 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 31 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		} else if (attribute.Domain is EntityDefinition) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn ");
            
            #line 32 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(" as ");
            
            #line 32 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 33 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		} else if (attribute.Domain is SelectType) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tif (");
            
            #line 34 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(" == null) return null;\r\n");
            
            #line 35 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 			foreach(var st in GetAllSpecific((SelectType)match.SourceAttribute.Domain)) {
				var ed = st as EntityDefinition;
				if(ed != null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\tvar ");
            
            #line 38 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 38 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(" as ");
            
            #line 38 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(st)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\tif (");
            
            #line 39 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" != null) \r\n");
            
            #line 40 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					if (IsInSelect(ed, match.TargetAttribute.Domain as SelectType)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\treturn ");
            
            #line 41 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 42 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t//TODO: Handle entity ");
            
            #line 43 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" which is not a part of the target select interface ");
            
            #line 43 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(attribute)));
            
            #line default
            #line hidden
            this.Write(" in property ");
            
            #line 43 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\tthrow new System.NotImplementedException();\r\n");
            
            #line 45 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					} 
            
            #line default
            #line hidden
            
            #line 46 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
				} else if(st is DefinedType){ 
					var dt = st as DefinedType;
					var targetDt = GetMappedDefinedType(dt);
            
            #line default
            #line hidden
            this.Write("\t\t\t\tif (");
            
            #line 49 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(" is ");
            
            #line 49 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(dt)));
            
            #line default
            #line hidden
            this.Write(") \r\n");
            
            #line 50 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					if (targetDt != null && IsInSelect(targetDt, match.TargetAttribute.Domain as SelectType)) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\treturn new ");
            
            #line 51 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(targetDt)));
            
            #line default
            #line hidden
            this.Write("((");
            
            #line 51 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetBaseSystemType(dt)));
            
            #line default
            #line hidden
            this.Write(")(");
            
            #line 51 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(dt)));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 51 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 52 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t//TODO: Handle defined type ");
            
            #line 53 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name));
            
            #line default
            #line hidden
            this.Write(" which is not a part of the target select interface ");
            
            #line 53 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(attribute)));
            
            #line default
            #line hidden
            this.Write(" in property ");
            
            #line 53 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\tthrow new System.NotImplementedException();\r\n");
            
            #line 55 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					}
            
            #line default
            #line hidden
            
            #line 56 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
				} else { 
					throw new Exception("Unexpected type (enum?)");
				} 
            
            #line default
            #line hidden
            
            #line 59 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} 
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn null;\r\n");
            
            #line 61 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		} else if (attribute.Domain is SimpleType) { 
            
            #line default
            #line hidden
            
            #line 62 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			if (match.SourceAttribute.OptionalFlag) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tif (");
            
            #line 63 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(" == null) return null;\r\n");
            
            #line 64 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} 
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn ");
            
            #line 65 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 66 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		} else if (attribute.Domain is EnumerationType) { 
			var enu = match.SourceAttribute.Domain as EnumerationType;
			var tEnum = GetMappedEnumerationType(enu);
			if (tEnum == null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t//TODO: Handle enumeration ");
            
            #line 70 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enu.Name));
            
            #line default
            #line hidden
            this.Write(" translation\r\n\t\t\t\tthrow new System.NotImplementedException();\r\n");
            
            #line 72 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\tswitch (");
            
            #line 73 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t\t\t{\r\n");
            
            #line 75 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
				foreach(var e in enu.Elements) {
					var translated = GetEnumEquivalent(e, tEnum);
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tcase ");
            
            #line 77 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(enu)));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 77 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(e));
            
            #line default
            #line hidden
            this.Write(":\r\n");
            
            #line 78 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					if (string.IsNullOrWhiteSpace(translated)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t//TODO: Handle translation of ");
            
            #line 79 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(e));
            
            #line default
            #line hidden
            this.Write(" member from ");
            
            #line 79 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enu.Name));
            
            #line default
            #line hidden
            this.Write(" in property ");
            
            #line 79 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tthrow new System.NotImplementedException();\r\n\t\t\t\t\t");
            
            #line 81 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\treturn ");
            
            #line 82 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(tEnum)));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 82 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(e));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					} 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\r\n");
            
            #line 84 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
				} 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new System.ArgumentOutOfRangeException();\r\n\t\t\t\t" +
                    "}\r\n");
            
            #line 88 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			}
        } else if(attribute.Domain is AggregationType) {
			var targetType =  (attribute.Domain as AggregationType).ElementType; 
			var sourceType = (match.SourceAttribute.Domain as AggregationType).ElementType; 
            
            #line default
            #line hidden
            this.Write("\t\t\tforeach (var member in ");
            
            #line 92 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(match.SourceAttribute.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t\t{\r\n");
            
            #line 94 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			if (targetType is DefinedType) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tyield return new ");
            
            #line 95 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(targetType as NamedType)));
            
            #line default
            #line hidden
            this.Write("((");
            
            #line 95 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetBaseSystemType(sourceType as DefinedType)));
            
            #line default
            #line hidden
            this.Write(")member);\r\n");
            
            #line 96 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} else if (targetType is SimpleType) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tyield return member;\r\n");
            
            #line 98 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} else if (targetType is EntityDefinition) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tyield return member as ");
            
            #line 99 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(targetType as NamedType)));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 100 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} else if (targetType is SelectType) { 
            
            #line default
            #line hidden
            
            #line 101 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 				foreach(var st in GetAllSpecific((SelectType)sourceType)) {
					var ed = st as EntityDefinition;
					if(ed != null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\tvar ");
            
            #line 104 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" = member as ");
            
            #line 104 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(st)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\tif (");
            
            #line 105 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" != null) \r\n");
            
            #line 106 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
						if (IsInSelect(ed, targetType as SelectType)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tyield return ");
            
            #line 107 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 108 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
						} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t//TODO: Handle entity ");
            
            #line 109 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(" which is not a part of the target select interface ");
            
            #line 109 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(targetType as NamedType)));
            
            #line default
            #line hidden
            this.Write(" in property ");
            
            #line 109 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\tthrow new System.NotImplementedException();\r\n");
            
            #line 111 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
						} 
            
            #line default
            #line hidden
            
            #line 112 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					} else if (st is DefinedType) { 
						var dt = st as DefinedType;
						var targetDt = GetMappedDefinedType(dt);
            
            #line default
            #line hidden
            this.Write("\t\t\t\tif (member is ");
            
            #line 115 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(dt)));
            
            #line default
            #line hidden
            this.Write(") \r\n");
            
            #line 116 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
						if (targetDt != null && IsInSelect(targetDt, targetType as SelectType)) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tyield return new ");
            
            #line 117 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(targetDt)));
            
            #line default
            #line hidden
            this.Write("((");
            
            #line 117 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetBaseSystemType(dt)));
            
            #line default
            #line hidden
            this.Write(")(");
            
            #line 117 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeFull(dt)));
            
            #line default
            #line hidden
            this.Write(")member);\r\n");
            
            #line 118 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
						} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t//TODO: Handle defined type ");
            
            #line 119 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(st.Name));
            
            #line default
            #line hidden
            this.Write(" which is not a part of the target select interface ");
            
            #line 119 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetInterfaceCSTypeFull(attribute)));
            
            #line default
            #line hidden
            this.Write(" in property ");
            
            #line 119 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\tthrow new System.NotImplementedException();\r\n");
            
            #line 121 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
						}
            
            #line default
            #line hidden
            
            #line 122 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
					} else if (st is EnumerationType) { 
						Console.WriteLine("Enumeration found as a select member. This is legal in EXPRESS schema but not supported in our implementation");
					} else { 
						throw new Exception("Unexpected type (enum?)");
					} 
            
            #line default
            #line hidden
            
            #line 127 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
				} 
            
            #line default
            #line hidden
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
			} 
            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n");
            
            #line 130 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
		} else { 
			throw new Exception("Unexpected attribute type");
		} 
            
            #line default
            #line hidden
            this.Write("\t\t\t} \r\n\t\t}\r\n");
            
            #line 135 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
	} 
            
            #line default
            #line hidden
            
            #line 136 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 foreach(var attribute in InverseAttributesToImplement){  
	var inverseType = "I" + attribute.Domain.Name; 
            
            #line default
            #line hidden
            
            #line 138 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 if (IsEnumeration(attribute)) { 
            
            #line default
            #line hidden
            this.Write("\t\tIEnumerable<");
            
            #line 139 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 139 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("I" + attribute.ParentEntity.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 139 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 140 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 141 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 141 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Interface));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 141 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 142 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t{ \r\n\t\t\tget\r\n\t\t\t{\r\n");
            
            #line 146 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 if (IsDoubleAggregation(attribute)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.");
            
            #line 147 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsEnumeration(attribute) ? "Where" : "FirstOrDefault"));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 147 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 147 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" != null &&  e.");
            
            #line 147 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(".Any( i => i.Contains(this)));\r\n");
            
            #line 148 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } else if (IsAggregation(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.");
            
            #line 149 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsEnumeration(attribute) ? "Where" : "FirstOrDefault"));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 149 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 149 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" != null &&  e.");
            
            #line 149 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(".Contains(this));\r\n");
            
            #line 150 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.");
            
            #line 151 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsEnumeration(attribute) ? "Where" : "FirstOrDefault"));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 151 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => (e.");
            
            #line 151 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" as ");
            
            #line 151 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(") == this);\r\n");
            
            #line 152 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t} \r\n\t\t}\r\n");
            
            #line 155 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\CrossAccess\EntityInterfaceImplementation.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t}\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
