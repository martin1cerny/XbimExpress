// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Xbim.CodeGeneration.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Xbim.CodeGeneration.Helpers;
    using Xbim.ExpressParser.SDAI;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class EntityTemplate : EntityTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 9 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var u in Using) { 
            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 10 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(u));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 11 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nnamespace ");
            
            #line 13 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 15 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if(IsIndexed) { 
            
            #line default
            #line hidden
            this.Write("\t[IndexedClass]\r\n");
            
            #line 17 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t[ExpressType(\"");
            
            #line 18 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Type.PersistanceName));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 18 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Type.TypeId));
            
            #line default
            #line hidden
            this.Write(")]\r\n\t// ReSharper disable once PartialTypeWithSinglePart\r\n\tpublic ");
            
            #line 20 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AbstractKeyword));
            
            #line default
            #line hidden
            this.Write(" partial class @");
            
            #line 20 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 20 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Inheritance));
            
            #line default
            #line hidden
            this.Write(", IEqualityComparer<@");
            
            #line 20 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(">, IEquatable<@");
            
            #line 20 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(">\r\n\t{\r\n\t\tpublic static int LoadDepth = 1;\r\n\r\n");
            
            #line 24 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsFirst) {
            
            #line default
            #line hidden
            this.Write("\t\t#region Implementation of ");
            
            #line 25 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\tpublic int EntityLabel {get; internal set;}\r\n\t\t\r\n\t\tpublic ");
            
            #line 29 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelInterface));
            
            #line default
            #line hidden
            this.Write(@" Model { get; internal set; }

		/// <summary>
        /// This property is deprecated and likely to be removed. Use just 'Model' instead.
        /// </summary>
		[Obsolete(""This property is deprecated and likely to be removed. Use just 'Model' instead."")]
        public ");
            
            #line 35 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelInterface));
            
            #line default
            #line hidden
            this.Write(" ModelOf { get { return Model; } }\r\n\t\t\r\n\t    internal ActivationStatus Activation" +
                    "Status = ActivationStatus.NotActivated;\r\n\r\n\t    ActivationStatus ");
            
            #line 39 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write(".ActivationStatus { get { return ActivationStatus; } }\r\n\t\t\r\n\t\tvoid ");
            
            #line 41 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write(@".Activate(bool write)
		{
			switch (ActivationStatus)
		    {
		        case ActivationStatus.ActivatedReadWrite:
		            return;
		        case ActivationStatus.NotActivated:
		            lock (this)
		            {
                        //check again in the lock
		                if (ActivationStatus == ActivationStatus.NotActivated)
		                {
		                    if (Model.Activate(this, write))
		                    {
		                        ActivationStatus = write
		                            ? ActivationStatus.ActivatedReadWrite
		                            : ActivationStatus.ActivatedRead;
		                    }
		                }
		            }
		            break;
		        case ActivationStatus.ActivatedRead:
		            if (!write) return;
		            if (Model.Activate(this, true))
                        ActivationStatus = ActivationStatus.ActivatedReadWrite;
		            break;
		        default:
		            throw new ArgumentOutOfRangeException();
		    }
		}

		void ");
            
            #line 72 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write(@".Activate (Action activation)
		{
			if (ActivationStatus != ActivationStatus.NotActivated) return; //activation can only happen once in a lifetime of the object
			
			activation();
			ActivationStatus = ActivationStatus.ActivatedRead;
		}
		#endregion

");
            
            #line 81 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t//internal constructor makes sure that objects are not created outside of the m" +
                    "odel/ assembly controlled area\r\n\t\tinternal ");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelInterface));
            
            #line default
            #line hidden
            this.Write(" model) ");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (!IsFirst) {
            
            #line default
            #line hidden
            this.Write(": base(model) ");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t{ \r\n\t\t\tModel = model; \r\n");
            
            #line 86 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach (var attribute in AggregatedExplicitAttributes){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 87 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 87 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("( this );\r\n");
            
            #line 88 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n");
            
            #line 91 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (ExplicitAttributes.Any()) {
            
            #line default
            #line hidden
            this.Write("\t\t#region Explicit attribute fields\r\n");
            
            #line 93 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var attribute in ExplicitAttributes){ 
            
            #line default
            #line hidden
            this.Write("\t\tprivate ");
            
            #line 94 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 94 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 95 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n\t\r\n\t\t#region Explicit attribute properties\r\n");
            
            #line 99 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var attribute in ExplicitAttributes){ 
            
            #line default
            #line hidden
            
            #line 100 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsPartOfInverse(attribute)) { 
            
            #line default
            #line hidden
            this.Write("\t\t[IndexedProperty]\r\n");
            
            #line 102 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t[EntityAttribute(");
            
            #line 103 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeOrder(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 103 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeState(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 103 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeType(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 103 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeMemberType(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 103 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeMinCardinality(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 103 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeMaxCardinality(attribute)));
            
            #line default
            #line hidden
            this.Write(")]\r\n\t\tpublic ");
            
            #line 104 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write(" @");
            
            #line 104 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t{ \r\n\t\t\tget \r\n\t\t\t{\r\n\t\t\t\tif(ActivationStatus != ActivationStatus.NotActivated)" +
                    " return ");
            
            #line 108 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t((");
            
            #line 109 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write(")this).Activate(false);\r\n\t\t\t\treturn ");
            
            #line 110 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t} \r\n");
            
            #line 112 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (!(attribute.Domain is AggregationType)) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tset\r\n\t\t\t{\r\n\t\t\t\tSetValue( v =>  ");
            
            #line 115 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = v, ");
            
            #line 115 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(", value,  \"");
            
            #line 115 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\t} \r\n");
            
            #line 117 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\r\n");
            
            #line 120 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n");
            
            #line 122 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 124 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (InverseAttributes.Any()) {
            
            #line default
            #line hidden
            this.Write("\t\t#region Inverse attributes\r\n");
            
            #line 126 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var attribute in InverseAttributes){  
	var inverseType = attribute.Domain.Name; 
            
            #line default
            #line hidden
            this.Write("\t\t[EntityAttribute(");
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeOrder(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeState(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeType(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeMemberType(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeMinCardinality(attribute)));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 128 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeMaxCardinality(attribute)));
            
            #line default
            #line hidden
            this.Write(")]\r\n");
            
            #line 129 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsEnumeration(attribute)) { 
            
            #line default
            #line hidden
            this.Write("\t\tpublic IEnumerable<");
            
            #line 130 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write("> @");
            
            #line 130 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 131 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 132 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(" @");
            
            #line 132 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 133 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t{ \r\n\t\t\tget \r\n\t\t\t{\r\n");
            
            #line 137 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsDoubleAggregation(attribute)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.");
            
            #line 138 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsEnumeration(attribute) ? "Where" : "FirstOrDefault"));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 138 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 138 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" != null &&  e.");
            
            #line 138 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(".Any( i => i.Contains(this)));\r\n");
            
            #line 139 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } else if (IsAggregation(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.");
            
            #line 140 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsEnumeration(attribute) ? "Where" : "FirstOrDefault"));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 140 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 140 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" != null &&  e.");
            
            #line 140 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(".Contains(this));\r\n");
            
            #line 141 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.");
            
            #line 142 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IsEnumeration(attribute) ? "Where" : "FirstOrDefault"));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 142 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 142 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" == this);\r\n");
            
            #line 143 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t} \r\n\t\t}\r\n");
            
            #line 146 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n");
            
            #line 148 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 150 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsFirst) { 
            
            #line default
            #line hidden
            this.Write(@"		#region INotifyPropertyChanged implementation
		 
		public event PropertyChangedEventHandler PropertyChanged;

		protected void NotifyPropertyChanged( string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

		#endregion

		#region Transactional property setting

		protected void SetValue<TProperty>(Action<TProperty> setter, TProperty oldValue, TProperty newValue, string notifyPropertyName)
		{
			//activate for write if it is not activated yet
			if (ActivationStatus != ActivationStatus.ActivatedReadWrite)
				((");
            
            #line 171 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write(@")this).Activate(true);

			//just set the value if the model is marked as non-transactional
			if (!Model.IsTransactional)
			{
				setter(newValue);
				NotifyPropertyChanged(notifyPropertyName);
				return;
			}

			//check there is a transaction
			var txn = Model.CurrentTransaction;
			if (txn == null) throw new Exception(""Operation out of transaction."");

			Action doAction = () => {
				setter(newValue);
				NotifyPropertyChanged(notifyPropertyName);
			};
			Action undoAction = () => {
				setter(oldValue);
				NotifyPropertyChanged(notifyPropertyName);
			};
			doAction();

			//do action and THAN add to transaction so that it gets the object in new state
			txn.AddReversibleAction(doAction, undoAction, this, ChangeType.Modified);
		}

		#endregion
");
            
            #line 200 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#region ");
            
            #line 202 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistInterface));
            
            #line default
            #line hidden
            this.Write(" implementation\r\n\t\tpublic ");
            
            #line 203 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(VirtualOverrideKeyword));
            
            #line default
            #line hidden
            this.Write(" void Parse(int propIndex, IPropertyValue value)\r\n\t\t{\r\n");
            
            #line 205 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
	if (AllExplicitAttributes.Any()) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tswitch (propIndex)\r\n\t\t\t{\r\n");
            
            #line 208 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
		if (ParentAttributes.Any()){
            foreach (var attribute in ParentAttributes)
            { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 211 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeIndex(attribute)));
            
            #line default
            #line hidden
            this.Write(": \r\n");
            
            #line 212 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
          } 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tbase.Parse(propIndex, value); \r\n\t\t\t\t\treturn;\r\n");
            
            #line 215 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"

		}
		foreach (var attribute in ExplicitAttributes) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 218 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeIndex(attribute)));
            
            #line default
            #line hidden
            this.Write(": \r\n");
            
            #line 219 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
			if (IsEntityOrSelectAggregation(attribute)) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tif (");
            
            #line 220 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" == null) ");
            
            #line 220 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 220 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("( this );\r\n\t\t\t\t\t");
            
            #line 221 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".InternalAdd((");
            
            #line 221 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAggregationElementType(attribute)));
            
            #line default
            #line hidden
            this.Write(")value.EntityVal);\r\n\t\t\t\t\treturn;\r\n");
            
            #line 223 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			} 
			if(attribute.Domain is EntityDefinition || attribute.Domain is SelectType){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 226 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 226 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write(")(value.EntityVal);\r\n\t\t\t\t\treturn;\r\n");
            
            #line 228 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			}
			var enumType = attribute.Domain as EnumerationType;
			if(enumType != null){ 
            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 232 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 232 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumType.Name));
            
            #line default
            #line hidden
            this.Write(") System.Enum.Parse(typeof (");
            
            #line 232 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumType.Name));
            
            #line default
            #line hidden
            this.Write("), value.EnumVal, true);\r\n\t\t\t\t\treturn;\r\n");
            
            #line 234 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
			continue;
			}
			if (IsComplexDefinedType(attribute)){
				var varName = GetPrivateFieldName(attribute).Trim('_');
				if(attribute.OptionalFlag) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tif (!");
            
            #line 239 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".HasValue) ");
            
            #line 239 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 239 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeNN(attribute)));
            
            #line default
            #line hidden
            this.Write("();\r\n\t\t\t        var ");
            
            #line 240 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(varName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 240 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".Value;\r\n\t\t\t\t\t");
            
            #line 241 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeNN(attribute)));
            
            #line default
            #line hidden
            this.Write(".Add(ref ");
            
            #line 241 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(varName));
            
            #line default
            #line hidden
            this.Write(", value.");
            
            #line 241 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t");
            
            #line 242 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 242 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(varName));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\treturn;\r\n");
            
            #line 244 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
					continue;
                }
				else
                {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tvar ");
            
            #line 248 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(varName));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 248 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\t");
            
            #line 249 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSTypeNN(attribute)));
            
            #line default
            #line hidden
            this.Write(".Add(ref ");
            
            #line 249 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(varName));
            
            #line default
            #line hidden
            this.Write(", value.");
            
            #line 249 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t");
            
            #line 250 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 250 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(varName));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\treturn;\r\n");
            
            #line 252 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				}
			}
			if (IsSimpleOrDefinedType(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 255 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = value.");
            
            #line 255 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\treturn;\r\n");
            
            #line 257 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			}
			if (IsSimpleOrDefinedTypeAggregation(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tif (");
            
            #line 260 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" == null) ");
            
            #line 260 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 260 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("( this );\r\n\t\t\t\t\t");
            
            #line 261 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".InternalAdd(value.");
            
            #line 261 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\treturn;\r\n");
            
            #line 263 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t//this is a special case which has to be handled in a partial class which is" +
                    " not generated.\r\n\t\t\t\t\t//Parse");
            
            #line 266 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("(propIndex, value);\r\n\t\t\t\t\t//return;\r\n\t\t\t\t\tthrow new System.NotImplementedExceptio" +
                    "n(\"");
            
            #line 268 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0} in {1} is a special case of nested lists. It is not implemented for now.", attribute.Name, Name)));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 269 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
			Console.WriteLine("Parsing code wasn't generated for attribute " + attribute.Name + " of type "+ GetCSType(attribute) +" in entity " + Name);
			
		}
            
            #line default
            #line hidden
            this.Write("\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new XbimParserException(string.Format(\"Attribute index {" +
                    "0} is out of range for {1}\", propIndex + 1, GetType().Name.ToUpper()));\r\n\t\t\t}\r\n");
            
            #line 275 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
	} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t//there are no attributes defined for this entity\r\n            throw new Syste" +
                    "m.IndexOutOfRangeException(\"There are no attributes defined for this entity\");\r\n" +
                    "");
            
            #line 278 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t\r\n\t\tpublic ");
            
            #line 281 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(VirtualOverrideKeyword));
            
            #line default
            #line hidden
            this.Write(" string WhereRule() \r\n\t\t{\r\n");
            
            #line 283 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (WhereRules.Any()) { 
            
            #line default
            #line hidden
            this.Write("            throw new System.NotImplementedException();\r\n");
            
            #line 285 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach (var rule in WhereRules) {
            
            #line default
            #line hidden
            this.Write("\t\t/*");
            
            #line 286 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rule.Description));
            
            #line default
            #line hidden
            this.Write("*/\r\n");
            
            #line 287 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 288 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 }  else { 
            
            #line default
            #line hidden
            this.Write("\t\t\treturn \"\";\r\n");
            
            #line 290 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t#endregion\r\n\r\n\t\t#region Equality comparers and operators\r\n        public b" +
                    "ool Equals(@");
            
            #line 295 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" other)\r\n\t    {\r\n\t        return this == other;\r\n\t    }\r\n\r\n");
            
            #line 300 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsFirst) { 
            
            #line default
            #line hidden
            this.Write("\t    public override bool Equals(object obj)\r\n        {\r\n            // Check for" +
                    " null\r\n            if (obj == null) return false;\r\n\r\n            // Check for ty" +
                    "pe\r\n            if (GetType() != obj.GetType()) return false;\r\n\r\n            // " +
                    "Cast as @");
            
            #line 309 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write("\r\n            var root = (@");
            
            #line 310 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(@")obj;
            return this == root;
        }
        public override int GetHashCode()
        {
            //good enough as most entities will be in collections of  only one model, equals distinguishes for model
            return EntityLabel.GetHashCode(); 
        }
");
            
            #line 318 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n        public static bool operator ==(@");
            
            #line 320 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" left, @");
            
            #line 320 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(@" right)
        {
            // If both are null, or both are same instance, return true.
            if (ReferenceEquals(left, right))
                return true;

            // If one is null, but not both, return false.
            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
                return false;

            return (left.EntityLabel == right.EntityLabel) && (left.Model == right.Model);

        }

        public static bool operator !=(@");
            
            #line 334 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" left, @");
            
            #line 334 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" right)\r\n        {\r\n            return !(left == right);\r\n        }\r\n\r\n\r\n        " +
                    "public bool Equals(@");
            
            #line 340 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" x, @");
            
            #line 340 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" y)\r\n        {\r\n            return x == y;\r\n        }\r\n\r\n        public int GetHa" +
                    "shCode(@");
            
            #line 345 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" obj)\r\n        {\r\n            return obj == null ? -1 : obj.GetHashCode();\r\n     " +
                    "   }\r\n        #endregion\r\n\t}\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class EntityTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
