// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Xbim.CodeGeneration.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Xbim.CodeGeneration.Helpers;
    using Xbim.ExpressParser.SDAI;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class EntityTemplate : EntityTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 9 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var u in Using) { 
            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 10 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(u));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 11 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\nnamespace ");
            
            #line 13 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t[EntityName(\"");
            
            #line 15 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Type.PersistanceName));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 15 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Type.TypeId));
            
            #line default
            #line hidden
            this.Write(")]\r\n\t// ReSharper disable once PartialTypeWithSinglePart\r\n\tpublic ");
            
            #line 17 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AbstractKeyword));
            
            #line default
            #line hidden
            this.Write(" partial class @");
            
            #line 17 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 17 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Inheritance));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n");
            
            #line 19 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsFirst) {
            
            #line default
            #line hidden
            this.Write("\t\t#region Implementation of ");
            
            #line 20 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistEntityInterface));
            
            #line default
            #line hidden
            this.Write("\r\n\t\tpublic int EntityLabel {get; internal set;}\r\n\t\t\r\n\t\tpublic ");
            
            #line 23 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelInterface));
            
            #line default
            #line hidden
            this.Write(@" Model { get; internal set; }
		
		public bool Activated { get; internal set; }

		public void Activate(bool write)
		{
			if (Activated) return; //activation can only happen once in a lifetime of the object

			Model.Activate(this, write);
			Activated = true;
		}

		public void Activate (Action activation)
		{
			activation();
			Activated = true;
		}
		#endregion

");
            
            #line 42 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t//internal constructor makes sure that objects are not created outside of the m" +
                    "odel/ assembly controlled area\r\n\t\tinternal ");
            
            #line 44 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 44 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ModelInterface));
            
            #line default
            #line hidden
            this.Write(" model) ");
            
            #line 44 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (!IsFirst) {
            
            #line default
            #line hidden
            this.Write(": base(model) ");
            
            #line 44 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t{ \r\n\t\t\tModel = model; \r\n");
            
            #line 47 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach (var attribute in AggregatedExplicitAttributes){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 48 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 48 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("( this );\r\n");
            
            #line 49 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\t#region Explicit attribute fields\r\n");
            
            #line 53 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var attribute in Type.ExplicitAttributes){ 
            
            #line default
            #line hidden
            this.Write("\t\tprivate ");
            
            #line 54 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 54 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 55 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n\t\r\n\t\t#region Explicit attribute properties\r\n");
            
            #line 59 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var attribute in ExplicitAttributes){ 
            
            #line default
            #line hidden
            this.Write("\t\t[EntityAttribute(");
            
            #line 60 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeIndex(attribute)));
            
            #line default
            #line hidden
            this.Write(", EntityAttributeState.");
            
            #line 60 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.OptionalFlag ? "Optional" : "Mandatory"));
            
            #line default
            #line hidden
            this.Write(")]\r\n\t\tpublic ");
            
            #line 61 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write(" @");
            
            #line 61 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t{ \r\n\t\t\tget \r\n\t\t\t{\r\n\t\t\t\tif(Activated) return ");
            
            #line 65 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\r\n\t\t\t\tModel.Activate(this, true);\r\n\t\t\t\tActivated = true;\r\n\t\t\t\treturn ");
            
            #line 69 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t} \r\n\t\t\tset\r\n\t\t\t{\r\n\t\t\t\tSetValue( v =>  ");
            
            #line 73 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = v, ");
            
            #line 73 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(", value,  \"");
            
            #line 73 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\t} \r\n\t\t}\r\n\t\r\n");
            
            #line 77 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t#endregion\r\n\r\n\t\t#region Inverse attributes\r\n");
            
            #line 81 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach(var attribute in InverseAttributes){  
	var inverseType = attribute.Domain.Name; 
            
            #line default
            #line hidden
            this.Write("\t\tpublic IEnumerable<");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write("> @");
            
            #line 83 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t{ \r\n\t\t\tget \r\n\t\t\t{\r\n");
            
            #line 87 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsDoubleAggregation(attribute)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.Where<");
            
            #line 88 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 88 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" != null &&  e.");
            
            #line 88 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(".Any( i => i.Contains(this)));\r\n");
            
            #line 89 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } else if (IsAggregation(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.Where<");
            
            #line 90 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 90 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" != null &&  e.");
            
            #line 90 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(".Contains(this));\r\n");
            
            #line 91 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Model.Instances.Where<");
            
            #line 92 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inverseType));
            
            #line default
            #line hidden
            this.Write(">(e => e.");
            
            #line 92 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.InvertedAttr.Name));
            
            #line default
            #line hidden
            this.Write(" == this);\r\n");
            
            #line 93 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t} \r\n\t\t}\r\n\t\r\n");
            
            #line 97 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#endregion\r\n");
            
            #line 100 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (IsFirst) { 
            
            #line default
            #line hidden
            this.Write(@"
		#region INotifyPropertyChanged implementation
		 
		public event PropertyChangedEventHandler PropertyChanged;

		protected void NotifyPropertyChanged( string propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

		#endregion

		#region Transactional property setting

		protected void SetValue<TProperty>(Action<TProperty> setter, TProperty oldValue, TProperty newValue, string notifyPropertyName)
		{

			if (!Model.IsTransactional)
			{
				setter(newValue);
				NotifyPropertyChanged(notifyPropertyName);
				return;
			}

			//check there is a transaction
			var txn = Model.CurrentTransaction;
			if (txn == null) throw new Exception(""Operation out of transaction."");

			Action doAction = () => setter(newValue);
			Action undoAction = () => setter(oldValue);
			txn.AddReversibleAction(doAction, undoAction, this);
			setter(newValue);
			NotifyPropertyChanged(notifyPropertyName);
		}

		#endregion
");
            
            #line 140 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t#region ");
            
            #line 142 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PersistInterface));
            
            #line default
            #line hidden
            this.Write(" implementation\r\n\t\tpublic ");
            
            #line 143 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(VirtualOverrideKeyword));
            
            #line default
            #line hidden
            this.Write(" void Parse(int propIndex, IPropertyValue value)\r\n\t\t{\r\n");
            
            #line 145 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
	if (AllExplicitAttributes.Any()) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tswitch (propIndex)\r\n\t\t\t{\r\n");
            
            #line 148 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
		if (ParentAttributes.Any()){
            foreach (var attribute in ParentAttributes)
            { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 151 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeIndex(attribute)));
            
            #line default
            #line hidden
            this.Write(": \r\n");
            
            #line 152 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
          } 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tbase.Parse(propIndex, value); \r\n\t\t\t\t\treturn;\r\n");
            
            #line 155 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"

		}
		foreach (var attribute in ExplicitAttributes) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tcase ");
            
            #line 158 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAttributeIndex(attribute)));
            
            #line default
            #line hidden
            this.Write(": \r\n");
            
            #line 159 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
			if (IsEntityOrSelectAggregation(attribute)) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tif (");
            
            #line 160 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" == null) ");
            
            #line 160 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 160 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("( this );\r\n\t\t\t\t\t");
            
            #line 161 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".InternalAdd((");
            
            #line 161 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetAggregationElementType(attribute)));
            
            #line default
            #line hidden
            this.Write(")value.EntityVal);\r\n\t\t\t\t\treturn;\r\n");
            
            #line 163 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			} 
			if(attribute.Domain is EntityDefinition || attribute.Domain is SelectType){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 166 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 166 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write(")(value.EntityVal);\r\n\t\t\t\t\treturn;\r\n");
            
            #line 168 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			}
			var enumType = attribute.Domain as EnumerationType;
			if(enumType != null){ 
            
            #line default
            #line hidden
            this.Write("                    ");
            
            #line 172 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 172 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumType.Name));
            
            #line default
            #line hidden
            this.Write(") System.Enum.Parse(typeof (");
            
            #line 172 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumType.Name));
            
            #line default
            #line hidden
            this.Write("), value.EnumVal, true);\r\n\t\t\t\t\treturn;\r\n");
            
            #line 174 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
			continue;
			}
			if (IsComplexDefinedType(attribute)){
				if(attribute.OptionalFlag) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tif (!");
            
            #line 178 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".HasValue) ");
            
            #line 178 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 178 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("();\r\n\t\t\t        // ReSharper disable once PossibleNullReferenceException\r\n\t\t\t\t\t((" +
                    "IExpressComplexType)");
            
            #line 180 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(").Add(value.");
            
            #line 180 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\treturn;\r\n");
            
            #line 182 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
					continue;
                }
				else
                {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t((IExpressComplexType)");
            
            #line 186 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(").Add(value.");
            
            #line 186 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\treturn;\r\n");
            
            #line 188 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				}
			}
			if (IsSimpleOrDefinedType(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 191 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = value.");
            
            #line 191 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t\treturn;\r\n");
            
            #line 193 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			}
			if (IsSimpleOrDefinedTypeAggregation(attribute)){
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tif (");
            
            #line 196 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" == null) ");
            
            #line 196 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 196 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetCSType(attribute)));
            
            #line default
            #line hidden
            this.Write("( this );\r\n\t\t\t\t\t");
            
            #line 197 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPrivateFieldName(attribute)));
            
            #line default
            #line hidden
            this.Write(".InternalAdd(value.");
            
            #line 197 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyValueMember(attribute.Domain)));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\treturn;\r\n");
            
            #line 199 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
				continue;
			}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t//this is a special case which has to be handled in a partial class which is" +
                    " not generated.\r\n\t\t\t\t\t//Parse");
            
            #line 202 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(attribute.Name));
            
            #line default
            #line hidden
            this.Write("(propIndex, value);\r\n\t\t\t\t\t//return;\r\n\t\t\t\t\tthrow new System.NotImplementedExceptio" +
                    "n(\"");
            
            #line 204 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0} in {1} is a special case of nested lists. It is not implemented for now.", attribute.Name, Name)));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 205 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
			Console.WriteLine("Parsing code wasn't generated for attribute " + attribute.Name + " of type "+ GetCSType(attribute) +" in entity " + Name);
			
		}
            
            #line default
            #line hidden
            this.Write("\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new XbimParserException(string.Format(\"Attribute index {" +
                    "0} is out of range for {1}\", propIndex + 1, GetType().Name.ToUpper()));\r\n\t\t\t}\r\n");
            
            #line 211 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
	} else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t//there are no attributes defined for this entity\r\n            throw new Syste" +
                    "m.IndexOutOfRangeException(\"There are no attributes defined for this entity\");\r\n" +
                    "");
            
            #line 214 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
	}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t\r\n\t\tpublic ");
            
            #line 217 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(VirtualOverrideKeyword));
            
            #line default
            #line hidden
            this.Write(" string WhereRule() \r\n\t\t{\r\n");
            
            #line 219 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 if (WhereRules.Any()) { 
            
            #line default
            #line hidden
            this.Write("            throw new System.NotImplementedException();\r\n");
            
            #line 221 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 foreach (var rule in WhereRules) {
            
            #line default
            #line hidden
            this.Write("\t\t/*");
            
            #line 222 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(rule.Description));
            
            #line default
            #line hidden
            this.Write("*/\r\n");
            
            #line 223 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 224 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 }  else { 
            
            #line default
            #line hidden
            this.Write("\t\t\treturn \"\";\r\n");
            
            #line 226 "C:\CODE\XbimGit\XbimExpress\Xbim.CodeGeneration\Templates\EntityTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t\t#endregion\r\n\t}\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class EntityTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
